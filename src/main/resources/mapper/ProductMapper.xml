<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ec_mall.mapper.ProductMapper">
    <insert id="addProduct" parameterType="com.example.ec_mall.dao.ProductDao" useGeneratedKeys="true" keyProperty="productId" >
        insert into product (name, price, size, stock, info, created_by, created_date, updated_by, updated_date)
        values (#{name}, #{price}, #{size}, #{stock}, #{info}, #{createdBy}, now(), #{updatedBy}, now())
    </insert>

    <insert id="addCategory" parameterType="com.example.ec_mall.dao.CategoryDao" useGeneratedKeys="true" keyProperty="categoryId">
        insert into category (category_big, category_small, created_by, created_date, updated_by, updated_date)
        values (#{bigCategory}, #{smallCategory}, #{createdBy}, now(), #{updatedBy}, now())
    </insert>

    <insert id="addProductImages">
        insert into product_images (product_id, images_url, created_by, created_date, updated_by, updated_date)
        values (#{productId}, #{imagesUrl}, #{createdBy}, now(), #{updatedBy}, now())
    </insert>

    <insert id="addProductCategory" parameterType="com.example.ec_mall.dao.ProductCategoryDao">
        insert into product_category (product_id, category_id, created_by, created_date, updated_by, updated_date)
        values (#{productId}, #{categoryId}, #{createdBy}, now(), #{updatedBy}, now())
    </insert>

    <select id="product" resultType="com.example.ec_mall.dao.ProductDao">
        SELECT * FROM product;
    </select>

    <select id="findCategoryId" resultType="long">
        SELECT category_id FROM product_category
        WHERE product_id = #{productId};
    </select>

    <select id="findProductById" resultType="com.example.ec_mall.dao.UpdateProductDao">
        select A.product_id,
               C.category_id,
               A.name,
               A.price,
               A.size,
               A.stock,
               A.info,
               D.images_url,
               C.category_big,
               C.category_small
        FROM product AS A LEFT JOIN product_category AS B ON A.product_id = B.product_id
                          LEFT JOIN category AS C ON B.category_id = C.category_id
                          LEFT JOIN product_images AS D ON A.product_id = D.product_id
        where A.product_id = #{productId}
    </select>

    <update id="updateProduct" parameterType="com.example.ec_mall.dao.UpdateProductDao">
        update product
        set
            <if test="name != null">name = #{name},</if>
            <if test="price != null">price = #{price},</if>
            <if test="size != null">size = #{size},</if>
            <if test="stock != null">stock = #{stock},</if>
            <if test="info != null">info = #{info},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy},</if>
            updated_date = now()
        where A.product_id = #{productId}

        update category
        set
        <if test="bigCategory != null">category_big = #{bigCategory},</if>
        <if test="smallCategory != null">category_small = #{smallCategory},</if>
        <if test="updatedBy != null">updated_by = #{updatedBy},</if>
        updated_date = now()
        where category_id = #{categoryId};

        update product_images
        set
            <if test="imagesUrl != null">images_url = #{imagesUrl},</if>
            updated_by = #{updatedBy},
            updated_date = now()
        where product_id = #{productId};
    </update>

    <delete id="deleteProduct">
        DELETE A, B, C, D FROM product AS A LEFT JOIN product_category AS B ON A.product_id = B.product_id
        LEFT JOIN category AS C ON B.category_id = C.category_id
        LEFT JOIN product_images AS D ON A.product_id = D.product_id
        WHERE A.product_id = #{productId}
    </delete>
</mapper>